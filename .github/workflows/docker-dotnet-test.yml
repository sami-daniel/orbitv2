name: CI/CD .NET Docker

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore

      - name: Check code formatting
        run: dotnet format --verify-no-changes

      - name: Static code analysis and build
        run: dotnet build --no-restore -warnaserror

      - name: Run tests with detailed results
        run: dotnet test --no-build --verbosity normal --logger "trx;LogFileName=test_results.trx"
      
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/*.trx'

      - name: List vulnerable packages
        run: dotnet list package --vulnerable || echo "No vulnerable packages found or error ignored"

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image (test stage)
        run: docker build --target test -t orbit:test .

      - name: Run container to execute tests
        run: docker run --rm orbit:test

      - name: Build Docker image (production stage)
        run: docker build --target production -t orbit:latest .
